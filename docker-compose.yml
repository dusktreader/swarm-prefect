version: '3.7'

services:
  apollo:
    image: prefecthq/apollo:${PREFECT_SERVER_TAG:-latest}
    command: bash -c "./post-start.sh && npm run serve"
    depends_on: ["graphql"]
    networks: ["prefect-server"]
    ports: ["${APOLLO_HOST_PORT:-4200}:4200"]
    restart: always
    environment:
      GRAPHQL_SERVICE_HOST: http://graphql
      GRAPHQL_SERVICE_PORT: ${GRAPHQL_HOST_PORT:-4201}
      HASURA_API_URL: ${HASURA_API_URL:-http://hasura:3000/v1alpha1/graphql}
      PREFECT_API_HEALTH_URL: ${PREFECT_API_HEALTH_URL:-http://graphql:4201/health}
      PREFECT_API_URL: ${PREFECT_API_URL:-http://graphql:4201/graphql/}
      PREFECT_SERVER__TELEMETRY__ENABLED: ${PREFECT_SERVER__TELEMETRY__ENABLED:-true}

  graphql:
    image: prefecthq/server:${PREFECT_SERVER_TAG:-latest}
    command: ["python", "src/prefect_server/services/graphql/server.py"]
    depends_on: ["hasura"]
    networks: ["prefect-server"]
    ports: ["${GRAPHQL_HOST_PORT:-4201}:4201"]
    restart: always
    environment:
      PREFECT_CORE_VERSION: ${PREFECT_CORE_VERSION:-"UNKNOWN"}
      PREFECT_SERVER__DATABASE__CONNECTION_URL: "postgresql://${POSTGRES_USER:-prefect}:${POSTGRES_PASSWORD:-test-password}@postgres:${POSTGRES_HOST_PORT:-5432}/${POSTGRES_DB:-prefect_server}"
      PREFECT_SERVER__HASURA__ADMIN_SECRET: ${PREFECT_SERVER__HASURA__ADMIN_SECRET:-hasura-secret-admin-secret}
      PREFECT_SERVER__HASURA__HOST: hasura

  hasura:
    image: hasura/graphql-engine:v1.3.0
    command: graphql-engine serve
    depends_on: ["postgres"]
    networks: ["prefect-server"]
    ports: ["${HASURA_HOST_PORT:-3000}:3000"]
    restart: always
    environment:
      HASURA_GRAPHQL_DATABASE_URL: "postgresql://${POSTGRES_USER:-prefect}:${POSTGRES_PASSWORD:-test-password}@postgres:${POSTGRES_HOST_PORT:-5432}/${POSTGRES_DB:-prefect_server}"
      HASURA_GRAPHQL_ENABLE_CONSOLE: 'true'
      HASURA_GRAPHQL_LOG_LEVEL: warn
      HASURA_GRAPHQL_QUERY_PLAN_CACHE_SIZE: 100
      HASURA_GRAPHQL_SERVER_PORT: '3000'

  postgres:
    image: postgres:11
    command: ["postgres", "-c", "max_connections=150"]
    networks: ["prefect-server"]
    ports: ["${POSTGRES_HOST_PORT:-5432}:5432"]
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-prefect_server}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-test-password}
      POSTGRES_USER: ${POSTGRES_USER:-prefect}

  towel:
    image: prefecthq/server:${PREFECT_SERVER_TAG:-latest}
    command: python src/prefect_server/services/towel/__main__.py
    depends_on: ["graphql"]
    networks: ["prefect-server"]
    restart: always
    environment:
      PREFECT_SERVER__HASURA__ADMIN_SECRET: ${PREFECT_SERVER__HASURA__ADMIN_SECRET:-hasura-secret-admin-secret}
      PREFECT_SERVER__HASURA__HOST: hasura

  marvin:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["python", "/marvin.py"]
    depends_on: ["towel"]
    networks: ["prefect-server"]
    volumes:
      - "./marvin.py:/marvin.py"
      - "./helpers.py:/helpers.py"
      - "./banner.txt:/banner.txt"
    restart: on-failure
    environment:
      UI_HOST_PORT: ${UI_HOST_PORT:-8080}
      APOLLO_URL: http://apollo:${APOLLO_HOST_PORT:-4200}
      PREFECT_CORE_VERSION: ${PREFECT_CORE_VERSION:-"UNKNOWN"}
      PREFECT_SERVER__DATABASE__CONNECTION_URL: "postgresql://${POSTGRES_USER:-prefect}:${POSTGRES_PASSWORD:-test-password}@postgres:${POSTGRES_HOST_PORT:-5432}/${POSTGRES_DB:-prefect_server}"
      PREFECT_SERVER__HASURA__ADMIN_SECRET: ${PREFECT_SERVER__HASURA__ADMIN_SECRET:-hasura-secret-admin-secret}
      PREFECT_SERVER__HASURA__HOST: hasura

  trillian:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["python", "/trillian.py"]
    depends_on: ["marvin"]
    networks: ["prefect-server"]
    restart: on-failure
    volumes:
      - "./trillian.py:/trillian.py"
      - "./helpers.py:/helpers.py"
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "./var/run/docker.sock:/var/run/docker.sock"
      - "./flows:/flows"
    environment:
      APOLLO_URL: http://apollo:${APOLLO_HOST_PORT:-4200}
      PREFECT_API_URL: ${PREFECT_API_URL:-http://graphql:4201/graphql/}

  heart-of-gold:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["python", "/HOG.py"]
    depends_on: ["marvin"]
    networks: ["prefect-server"]
    restart: on-failure
    volumes:
      - "./HOG.py:/HOG.py"
      - "./helpers.py:/helpers.py"
      - "./flows:/flows"
    environment:
      APOLLO_URL: http://apollo:${APOLLO_HOST_PORT:-4200}
      PREFECT_API_URL: ${PREFECT_API_URL:-http://graphql:4201/graphql/}
      PROJECT_NAME: "test-project"

  ui:
    image: prefecthq/ui:${PREFECT_UI_TAG:-latest}
    command: /intercept.sh
    depends_on: ["apollo"]
    networks: ["prefect-server"]
    ports: ["${UI_HOST_PORT:-8080}:8080"]
    restart: always
    environment:
      PREFECT_SERVER__APOLLO_URL: ${APOLLO_URL:-http://localhost:4200/graphql}

  zaphod:
    image: alpine/socat:latest
    networks: ["prefect-server"]
    ports: ["2375:2375"]
    volumes: ["/var/run/docker.sock:/var/run/docker.sock"]
    command: tcp-listen:2375,fork,reuseaddr unix-connect:/var/run/docker.sock

networks:
  prefect-server:
    name: prefect-server
